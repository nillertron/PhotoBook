// <auto-generated />
using System;
using DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAcces.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200819080112_video2")]
    partial class video2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.PB_Bruger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EfterNavn")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Navn")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("SharedId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PB_Bruger");
                });

            modelBuilder.Entity("Model.PB_Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("text");

                    b.Property<DateTime>("OprettetDato")
                        .HasColumnType("datetime");

                    b.Property<int>("PB_FotoalbumId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PB_FotoalbumId");

                    b.ToTable("PB_Foto");
                });

            modelBuilder.Entity("Model.PB_Fotoalbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("text");

                    b.Property<string>("Navn")
                        .HasColumnType("text");

                    b.Property<DateTime>("OprettetDato")
                        .HasColumnType("datetime");

                    b.Property<int>("PB_BrugerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PB_BrugerId");

                    b.ToTable("PB_FotoAlbum");
                });

            modelBuilder.Entity("Model.PB_Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("text");

                    b.Property<DateTime>("OprettelseDato")
                        .HasColumnType("datetime");

                    b.Property<int>("PB_FotoalbumId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PB_FotoalbumId");

                    b.ToTable("PB_Video");
                });

            modelBuilder.Entity("Model.PB_Foto", b =>
                {
                    b.HasOne("Model.PB_Fotoalbum", null)
                        .WithMany("Fotos")
                        .HasForeignKey("PB_FotoalbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.PB_Fotoalbum", b =>
                {
                    b.HasOne("Model.PB_Bruger", null)
                        .WithMany("Fotoalbum")
                        .HasForeignKey("PB_BrugerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.PB_Video", b =>
                {
                    b.HasOne("Model.PB_Fotoalbum", null)
                        .WithMany("Videos")
                        .HasForeignKey("PB_FotoalbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
